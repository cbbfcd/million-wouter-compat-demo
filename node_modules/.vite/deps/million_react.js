import {
  Children,
  Component,
  PureComponent,
  StrictMode,
  Suspense,
  SuspenseList,
  cloneElement,
  createElement,
  createPortal,
  createRef,
  createRoot,
  forwardRef,
  hydrateRoot,
  index,
  isValidElement,
  lazy,
  memo,
  render,
  version
} from "./chunk-X323XXJG.js";
import {
  Fragment,
  compat,
  createClass,
  createComponent,
  createContext,
  hook,
  jsx,
  startTransition,
  useCallback,
  useContext,
  useDebugValue,
  useDeferredValue,
  useEffect,
  useId,
  useImperativeHandle,
  useLayoutEffect,
  useMemo,
  useReducer,
  useRef,
  useState,
  useSyncExternalStore,
  useTransition
} from "./chunk-7MO7ZHJA.js";

// dep:million_react
var million_react_default = index;
export {
  Children,
  Component,
  Fragment,
  PureComponent,
  StrictMode,
  Suspense,
  SuspenseList,
  cloneElement,
  compat,
  createClass,
  createComponent,
  createContext,
  createElement,
  createPortal,
  createRef,
  createRoot,
  million_react_default as default,
  startTransition as flushSync,
  forwardRef,
  hook,
  hydrateRoot,
  isValidElement,
  jsx,
  jsx as jsxDEV,
  jsx as jsxs,
  lazy,
  memo,
  render,
  startTransition,
  SuspenseList as unstable_SuspenseList,
  startTransition as unstable_startTransition,
  useDeferredValue as unstable_useDeferredValue,
  useSyncExternalStore as unstable_useMutableSource,
  useTransition as unstable_useTransition,
  useCallback,
  useContext,
  useDebugValue,
  useDeferredValue,
  useEffect,
  useId,
  useImperativeHandle,
  useEffect as useInsertionEffect,
  useLayoutEffect,
  useMemo,
  useSyncExternalStore as useMutableSource,
  useReducer,
  useRef,
  useState,
  useSyncExternalStore,
  useTransition,
  version
};
//# sourceMappingURL=million_react.js.map
